{"pageContext":{"title":"Pluralization","body":"<div class=\"section\" id=\"pluralization\">\n<h1>Pluralization<a class=\"headerlink\" href=\"#pluralization\" title=\"Permalink to this headline\">¶</a></h1>\n<p>Plurals are essential when dealing with internationalization. <a class=\"reference external\" href=\"https://github.com/lingui/js-lingui\">LinguiJS</a>\nuses <a class=\"reference external\" href=\"http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\">CLDR Plural Rules</a>. In general, there’re 6 plural forms (taken\nfrom <a class=\"reference external\" href=\"http://cldr.unicode.org/index/cldr-spec/plural-rules\">CLDR Plurals</a> page):</p>\n<ul class=\"simple\">\n<li>zero</li>\n<li>one (singular)</li>\n<li>two (dual)</li>\n<li>few (paucal)</li>\n<li>many (also used for fractions if they have a separate class)</li>\n<li>other (required—general plural form—also used if the language only has a single form)</li>\n</ul>\n<p>Only the last one, <em>other</em>, is required because it’s the only common plural form\nused in all languages.</p>\n<p>All other plural forms depends on language. For example English has only two:\n<em>one</em> and <em>other</em> (1 book vs. 2 books). In Czech, we have three: <em>one</em>, <em>few</em>,\n<em>many</em> (1 kniha, 2 knihy, 5 knih). Some languages have even more, like Russian\nand Arabic.</p>\n<div class=\"section\" id=\"using-plural-forms\">\n<h2>Using plural forms<a class=\"headerlink\" href=\"#using-plural-forms\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Good thing is that <strong>as developers, we have to know only plural forms for\nthe source language</strong>.</p>\n<p>If we use English in the source code, then we’ll use only <em>one</em> and <em>other</em>:</p>\n<div class=\"highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n  <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">numBooks</span><span class=\"p\">,</span>\n  <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# book&quot;</span><span class=\"p\">,</span>\n  <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# books&quot;</span>\n<span class=\"p\">})</span>\n</pre></div>\n</div>\n<p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">numBooks</span> <span class=\"pre\">==</span> <span class=\"pre\">1</span></code>, this will render as <em>1 book</em> and for <code class=\"docutils literal notranslate\"><span class=\"pre\">numBook</span> <span class=\"pre\">==</span> <span class=\"pre\">2</span></code>\nit will be <em>2 books</em>.</p>\n<blockquote>\n<div>Funny fact for non-english speakers: In English, 0 uses plural form too,\n<em>0 books</em>.</div></blockquote>\n<p>Under the hood, <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n.plural</span></code> is replaced with low-level <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n._</span></code>. For production, the above example will become:</p>\n<div class=\"highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"s1\">&#39;{numBooks, plural, one {# book} other {# books}}&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">numBooks</span> <span class=\"p\">})</span>\n</pre></div>\n</div>\n<p>When we extract messages from source code using <a class=\"reference internal\" href=\"../../tutorials/cli/\"><span class=\"doc\">lingui-cli</span></a>, we get:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span><span class=\"n\">numBooks</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">one</span> <span class=\"p\">{</span><span class=\"c1\"># book} other {# books}}</span>\n</pre></div>\n</div>\n<p>Now, we give it to our Czech translator and they’ll translate it as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span><span class=\"n\">numBooks</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">one</span> <span class=\"p\">{</span><span class=\"c1\"># kniha} few {# knihy} other {# knih}}</span>\n</pre></div>\n</div>\n<p>The important thing is that <em>we don’t need to change our code to support\nlanguages with different plural rules</em>. Here’s a step-by-step description of\nthe process:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">In source code, we have:</p>\n<div class=\"highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n   <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">numBooks</span><span class=\"p\">,</span>\n   <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# book&quot;</span><span class=\"p\">,</span>\n   <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# books&quot;</span>\n<span class=\"p\">})</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Code is compiled to (using <cite>lingui-js</cite> or <cite>lingui-react</cite> babel preset):</p>\n<div class=\"highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span>\n   <span class=\"s1\">&#39;{numBooks, plural, one {# book} other {# books}}&#39;</span><span class=\"p\">,</span>\n   <span class=\"p\">{</span> <span class=\"nx\">numBooks</span> <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Message <cite>{numBooks, plural, one {# book} other {# books}}</cite> is translated to:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span><span class=\"n\">numBooks</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">one</span> <span class=\"p\">{</span><span class=\"c1\"># kniha} few {# knihy} other {# knih}}</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Finally, message is formatted using Czech plural rules.</p>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"using-other-language-than-english\">\n<h2>Using other language than English<a class=\"headerlink\" href=\"#using-other-language-than-english\" title=\"Permalink to this headline\">¶</a></h2>\n<p>That works perfectly fine! Just learn what <a class=\"reference external\" href=\"http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\">plural forms</a> your\nlanguages has and then you can use them. Here’s the example in Czech:</p>\n<div class=\"highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n  <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">numBooks</span><span class=\"p\">,</span>\n  <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s1\">&#39;# kniha&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">few</span><span class=\"o\">:</span> <span class=\"s1\">&#39;# knihy&#39;</span><span class=\"p\">,</span>\n  <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s1\">&#39;# knih&#39;</span>\n<span class=\"p\">})</span>\n</pre></div>\n</div>\n<p>This make <a class=\"reference external\" href=\"https://github.com/lingui/js-lingui\">LinguiJS</a> useful also for unilingual projects, i.e: if you don’t\ntranslate your app at all. Plurals, number and date formatting are common in\nevery language.</p>\n</div>\n</div>\n","toc":"<ul>\n<li><a class=\"reference internal\" href=\"#\">Pluralization</a><ul>\n<li><a class=\"reference internal\" href=\"#using-plural-forms\">Using plural forms</a></li>\n<li><a class=\"reference internal\" href=\"#using-other-language-than-english\">Using other language than English</a></li>\n</ul>\n</li>\n</ul>\n"}}