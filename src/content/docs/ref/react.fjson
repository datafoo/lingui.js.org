{"parents": [], "prev": {"link": "../core/", "title": "&#64;lingui/core - The core i18n functionality"}, "next": {"link": "../macro/", "title": "&#64;lingui/macro - Reference"}, "title": "API Reference - React (&#64;lingui/react)", "meta": {}, "body": "<div class=\"section\" id=\"api-reference-react-lingui-react\">\n<span id=\"ref-react\"></span><h1>API Reference - React (&#64;lingui/react)<a class=\"headerlink\" href=\"#api-reference-react-lingui-react\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Components from <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;lingui/react</span></code> wrap the vanilla JS API from <code class=\"docutils literal notranslate\"><span class=\"pre\">lingui-i18n</span></code>.\nReact components handle changes of active language or interpolated variables\nbetter than low-level API and also take care of re-rendering when wrapped inside\npure components.</p>\n<div class=\"section\" id=\"general-concepts\">\n<h2>General Concepts<a class=\"headerlink\" href=\"#general-concepts\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"rendering-of-translations\">\n<span id=\"rendering-translations\"></span><h3>Rendering of Translations<a class=\"headerlink\" href=\"#rendering-of-translations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>All i18n components render translation as a text without a wrapping tag. This can be\ncustomized in two different ways: globally: using <code class=\"docutils literal notranslate\"><span class=\"pre\">defaultRender</span></code> prop on\n<a class=\"reference internal\" href=\"#component-I18nProvider\">&lt;I18nProvider&gt;</a> component; or locally: using <code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> prop on i18n\ncomponents.</p>\n<div class=\"section\" id=\"global-configuration\">\n<h4>Global Configuration<a class=\"headerlink\" href=\"#global-configuration\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Default rendering component can be set using <code class=\"docutils literal notranslate\"><span class=\"pre\">defaultRender</span></code> prop in\n<a class=\"reference internal\" href=\"#component-I18nProvider\">&lt;I18nProvider&gt;</a>. The main use case for this is rendering translations\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Text&gt;</span></code> component in React Native.</p>\n<p>It\u2019s possible to pass in either a string for built-in elements (<cite>span</cite>, <cite>h1</cite>),\nReact elements or React classes. This prop has the same type as <code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> prop on\ni18n components described below.</p>\n</div>\n<div class=\"section\" id=\"local-configuration\">\n<h4>Local Configuration<a class=\"headerlink\" href=\"#local-configuration\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"14%\" />\n<col width=\"39%\" />\n<col width=\"47%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Prop name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">className</span></code></td>\n<td>string</td>\n<td>Class name to be added to <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;span&gt;</span></code> element</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code></td>\n<td>Element, Component, string, <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code></td>\n<td>Custom wrapper element to render translation</td>\n</tr>\n</tbody>\n</table>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">className</span></code> is used only for built-in components (when <cite>render</cite> is string).</p>\n<p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> is <strong>React.Element</strong> or <strong>string</strong> (built-in tags), it is\ncloned with the <code class=\"docutils literal notranslate\"><span class=\"pre\">translation</span></code> passed in as its child:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// built-in tags</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">render</span><span class=\"o\">=</span><span class=\"s\">&quot;h1&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">Heading</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n<span class=\"c1\">// renders as &lt;h1&gt;Heading&lt;/h1&gt;</span>\n\n<span class=\"c1\">// custom elements</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">render</span><span class=\"o\">=</span><span class=\"p\">{&lt;</span><span class=\"nt\">Link</span> <span class=\"na\">to</span><span class=\"o\">=</span><span class=\"s\">&quot;/docs&quot;</span> <span class=\"p\">/&gt;}&gt;</span><span class=\"nx\">Link</span> <span class=\"nx\">to</span> <span class=\"nx\">docs</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n<span class=\"c1\">// renders as &lt;Link to=&quot;/docs&quot;&gt;Link to docs&lt;/Link&gt;</span>\n</pre></div>\n</div>\n<p>Using <strong>React.Component</strong> (or stateless component) in <code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> prop is useful\nto get more control over the rendering of translation. Component passed to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> will receive the translation value as a <code class=\"docutils literal notranslate\"><span class=\"pre\">translation</span></code> prop:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// custom component</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">render</span><span class=\"o\">=</span><span class=\"p\">{({</span> <span class=\"nx\">translation</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">&lt;</span><span class=\"nt\">Icon</span> <span class=\"na\">label</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">translation</span><span class=\"p\">}</span> <span class=\"p\">/&gt;}&gt;</span>\n   <span class=\"nx\">Sign</span> <span class=\"k\">in</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n<span class=\"c1\">// renders as &lt;Icon label=&quot;Sign in&quot; /&gt;</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> also accepts <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code> value to render\nstring without wrapping component. This can be used to override\ncustom <code class=\"docutils literal notranslate\"><span class=\"pre\">defaultRender</span></code> config.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">render</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"kc\">null</span><span class=\"p\">}&gt;</span><span class=\"nx\">Heading</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n<span class=\"c1\">// renders as &quot;Heading&quot;</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"components\">\n<h2>Components<a class=\"headerlink\" href=\"#components\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"trans\">\n<h3>Trans<a class=\"headerlink\" href=\"#trans\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-Trans\">\n<code class=\"descname\">Trans</code><a class=\"headerlink\" href=\"#component-Trans\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>string?</strong> (<em>id</em>) \u2013 Override auto-generated message ID</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p>This is the main and most-used component for translation. It supports\nvariables and components inside messages. Usage of this component depends on\nwhether or not you\u2019re using LinguiJS Babel plugins.</p>\n<p>Each message is identified by <strong>message ID</strong>.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">babel-plugin-lingui-transform-react</span></code> automatically generates message ID from\ncontents of <a class=\"reference internal\" href=\"#component-Trans\">&lt;Trans&gt;</a> component, but it\u2019s possible to provide custom\nmessage ID by setting the <cite>id</cite> prop.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">Hello</span> <span class=\"nx\">World</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n\n<span class=\"c1\">// custom message ID</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;msg.hello&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">Hello</span> <span class=\"nx\">World</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n\n<span class=\"c1\">// variable interpolation</span>\n<span class=\"kr\">const</span> <span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Fred&quot;</span><span class=\"p\">;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">My</span> <span class=\"nx\">name</span> <span class=\"nx\">is</span> <span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"p\">}&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n\n <span class=\"c1\">// inline components</span>\n <span class=\"p\">&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">See</span> <span class=\"nx\">the</span> <span class=\"p\">&lt;</span><span class=\"nt\">Link</span> <span class=\"na\">to</span><span class=\"o\">=</span><span class=\"s\">&quot;/more&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">description</span><span class=\"p\">&lt;/</span><span class=\"nt\">Link</span><span class=\"p\">&gt;</span> <span class=\"nx\">below</span><span class=\"p\">.&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n</pre></div>\n</div>\n<p>It\u2019s also possible to use <a class=\"reference internal\" href=\"#component-Trans\">&lt;Trans&gt;</a> component without babel plugin. In\nfact, it\u2019s the only i18n component you\u2019ll need if you decide to go without the babel plugin.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;Hello World&quot;</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span>\n  <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;Hello {name}&quot;</span>\n  <span class=\"na\">values</span><span class=\"o\">=</span><span class=\"p\">{{</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;Arthur&#39;</span> <span class=\"p\">}}</span>\n<span class=\"p\">/&gt;;</span>\n\n<span class=\"c1\">// number of tag corresponds to index in `components` prop</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span>\n  <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;Read &lt;0&gt;Description&lt;/0&gt; below.&quot;</span>\n  <span class=\"na\">components</span><span class=\"o\">=</span><span class=\"p\">{[&lt;</span><span class=\"nt\">Link</span> <span class=\"na\">to</span><span class=\"o\">=</span><span class=\"s\">&quot;/docs&quot;</span> <span class=\"p\">/&gt;]}</span>\n<span class=\"p\">/&gt;;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span>\n  <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;Today is {today, date, short_date}&quot;</span>\n  <span class=\"na\">values</span><span class=\"o\">=</span><span class=\"p\">{{</span> <span class=\"nx\">today</span><span class=\"o\">:</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()</span> <span class=\"p\">}}</span>\n  <span class=\"na\">formats</span><span class=\"o\">=</span><span class=\"p\">{{</span>\n    <span class=\"nx\">short_date</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">year</span><span class=\"o\">:</span> <span class=\"s2\">&quot;numeric&quot;</span><span class=\"p\">,</span>\n      <span class=\"nx\">month</span><span class=\"o\">:</span> <span class=\"s2\">&quot;long&quot;</span><span class=\"p\">,</span>\n      <span class=\"nx\">day</span><span class=\"o\">:</span> <span class=\"s2\">&quot;numeric&quot;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}}</span>\n<span class=\"p\">/&gt;;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"plural\">\n<h3>Plural<a class=\"headerlink\" href=\"#plural\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-Plural\">\n<code class=\"descname\">Plural</code><a class=\"headerlink\" href=\"#component-Plural\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>id</strong> (<em>string</em>) \u2013 Override auto-generated message ID</li>\n<li><strong>offset</strong> (<em>number</em>) \u2013 Offset of value for plural forms</li>\n<li><strong>zero</strong> (<em>string</em>) \u2013 Form for empty <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code></li>\n<li><strong>one</strong> (<em>string</em>) \u2013 <em>Singular</em> form</li>\n<li><strong>two</strong> (<em>string</em>) \u2013 <em>Dual</em> form</li>\n<li><strong>few</strong> (<em>string</em>) \u2013 <em>Paucal</em> form</li>\n<li><strong>many</strong> (<em>string</em>) \u2013 <em>Plural</em> form</li>\n<li><strong>other</strong> (<em>string</em>) \u2013 (required) general <em>plural</em> form</li>\n<li><strong>_&lt;number&gt;</strong> (<em>string</em>) \u2013 Exact match form, correspond to <code class=\"docutils literal notranslate\"><span class=\"pre\">=N</span></code> rule</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Number format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#component-Plural\">&lt;Plural&gt;</a> component handles pluralization of words or phrases.\nSelected plural form depends on active language and <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> props.</p>\n<p>This component represents <code class=\"docutils literal notranslate\"><span class=\"pre\">plural</span></code> formatter in Message Format:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span><span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">one</span> <span class=\"p\">{</span><span class=\"c1\"># book} other {# books}}</span>\n</pre></div>\n</div>\n<p>Plural forms for all languages can be found at <a class=\"reference external\" href=\"http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\">CLDR Plural Rules</a>\npage.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">Not all languages use <code class=\"docutils literal notranslate\"><span class=\"pre\">zero</span></code> plural form! English, for example, uses\n<code class=\"docutils literal notranslate\"><span class=\"pre\">other</span></code> form when <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span> <span class=\"pre\">==</span> <span class=\"pre\">0</span></code> (e.g: 1 book, but 0 books).</p>\n</div>\n<p>As a developer, you only need to know plural rules for the language\nused in source code. For example for English it\u2019s only <code class=\"docutils literal notranslate\"><span class=\"pre\">one</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">other</span></code>:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n<span class=\"c1\">// renders as &#39;42 books&#39;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Plural</span>\n    <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">count</span><span class=\"p\">}</span>\n    <span class=\"na\">one</span><span class=\"o\">=</span><span class=\"s\">&quot;# book&quot;</span>\n    <span class=\"na\">other</span><span class=\"o\">=</span><span class=\"s\">&quot;# books&quot;</span>\n<span class=\"p\">/&gt;</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">#</span></code> character inside message is used as a placeholder for <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">other</span></code> plural form is used when a specific plural form isn\u2019t defined.</p>\n<p>It\u2019s also possible to use exact matches. This is commonly used in combination with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> prop. <code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> doesn\u2019t affect exact matches, only plural forms:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span>const count = 42\n\n&lt;Plural\n    value={count}\n    offset={1}\n    // when value == 0\n    _0=&quot;Nobody arrived&quot;\n\n    // when value == 1\n    _1=&quot;Only you arrived&quot;\n\n    // when value == 2\n    // value - offset = 1 -&gt; `one` plural form\n    one=&quot;You and # other guest arrived&quot;\n\n    // when value &gt;= 3\n    other=&quot;You and # other guests arrived&quot;\n/&gt;\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"select\">\n<h3>Select<a class=\"headerlink\" href=\"#select\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-Select\">\n<code class=\"descname\">Select</code><a class=\"headerlink\" href=\"#component-Select\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 Override auto-generated message ID</li>\n<li><strong>other</strong> (<em>number</em>) \u2013 (required) Default, catch-all form</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p>This component selects the form based on content of <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> prop. It\nworks like a <code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code> statement. <code class=\"docutils literal notranslate\"><span class=\"pre\">other</span></code> prop is used when no prop\nmatches <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// gender == &quot;female&quot;      -&gt; Her book</span>\n<span class=\"c1\">// gender == &quot;male&quot;        -&gt; His book</span>\n<span class=\"c1\">// gender == &quot;unspecified&quot; -&gt; Their book</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Select</span>\n    <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">gender</span><span class=\"p\">}</span>\n    <span class=\"na\">male</span><span class=\"o\">=</span><span class=\"s\">&quot;His book&quot;</span>\n    <span class=\"na\">female</span><span class=\"o\">=</span><span class=\"s\">&quot;Her book&quot;</span>\n    <span class=\"na\">other</span><span class=\"o\">=</span><span class=\"s\">&quot;Their book&quot;</span>\n<span class=\"p\">/&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"selectordinal\">\n<h3>SelectOrdinal<a class=\"headerlink\" href=\"#selectordinal\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-SelectOrdinal\">\n<code class=\"descname\">SelectOrdinal</code><a class=\"headerlink\" href=\"#component-SelectOrdinal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 Override auto-generated message ID</li>\n<li><strong>offset</strong> (<em>number</em>) \u2013 Offset of value for plural forms</li>\n<li><strong>zero</strong> (<em>string</em>) \u2013 Form for empty <cite>value</cite></li>\n<li><strong>one</strong> (<em>string</em>) \u2013 <em>Singular</em> form</li>\n<li><strong>two</strong> (<em>string</em>) \u2013 <em>Dual</em> form</li>\n<li><strong>few</strong> (<em>string</em>) \u2013 <em>Paucal</em> form</li>\n<li><strong>many</strong> (<em>string</em>) \u2013 <em>Plural</em> form</li>\n<li><strong>other</strong> (<em>string</em>) \u2013 (required) general <em>plural</em> form</li>\n<li><strong>_&lt;number&gt;</strong> (<em>string</em>) \u2013 Exact match form, correspond to <code class=\"docutils literal notranslate\"><span class=\"pre\">=N</span></code> rule. (e.g: <code class=\"docutils literal notranslate\"><span class=\"pre\">_0</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">_1</span></code>)</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Number format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>MessageFormat: <code class=\"docutils literal notranslate\"><span class=\"pre\">{arg,</span> <span class=\"pre\">selectordinal,</span> <span class=\"pre\">...forms}</span></code></p>\n</dd></dl>\n\n<p>This component is equivalent to <a class=\"reference internal\" href=\"#component-Plural\">&lt;Plural&gt;</a>. The only difference is that\nit uses <strong>ordinal</strong> plural forms, instead of <strong>cardinal</strong> ones.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// count == 1 -&gt; 1st</span>\n<span class=\"c1\">// count == 2 -&gt; 2nd</span>\n<span class=\"c1\">// count == 3 -&gt; 3rd</span>\n<span class=\"c1\">// count == 4 -&gt; 4th</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">SelectOrdinal</span>\n    <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">count</span><span class=\"p\">}</span>\n    <span class=\"na\">one</span><span class=\"o\">=</span><span class=\"s\">&quot;#st&quot;</span>\n    <span class=\"na\">two</span><span class=\"o\">=</span><span class=\"s\">&quot;#nd&quot;</span>\n    <span class=\"na\">few</span><span class=\"o\">=</span><span class=\"s\">&quot;#rd&quot;</span>\n    <span class=\"na\">other</span><span class=\"o\">=</span><span class=\"s\">&quot;#th&quot;</span>\n<span class=\"p\">/&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dateformat\">\n<h3>DateFormat<a class=\"headerlink\" href=\"#dateformat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-DateFormat\">\n<code class=\"descname\">DateFormat</code><a class=\"headerlink\" href=\"#component-DateFormat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>string|Date</em>) \u2013 Date to be formatted</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Date format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\">Intl.DateTimeFormat</a>.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#component-DateFormat\">&lt;DateFormat&gt;</a> component is a wrapper around <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\">Intl.DateTimeFormat</a>.\nIt takes a date object or a date string as a <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> prop and formats it using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code> options. <code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code> prop supports the same options as <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\">Intl.DateTimeFormat</a>:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// date as a string</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">DateFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;2018-07-23&quot;</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">now</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">();</span>\n<span class=\"c1\">// default language format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">DateFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">now</span><span class=\"p\">}</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">now</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">();</span>\n<span class=\"c1\">// custom format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">DateFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">now</span><span class=\"p\">}</span> <span class=\"na\">format</span><span class=\"o\">=</span><span class=\"p\">{{</span>\n    <span class=\"nx\">year</span><span class=\"o\">:</span> <span class=\"s2\">&quot;numeric&quot;</span><span class=\"p\">,</span>\n    <span class=\"nx\">month</span><span class=\"o\">:</span> <span class=\"s2\">&quot;long&quot;</span><span class=\"p\">,</span>\n    <span class=\"nx\">day</span><span class=\"o\">:</span> <span class=\"s2\">&quot;numeric&quot;</span>\n<span class=\"p\">}}</span> <span class=\"p\">/&gt;;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"numberformat\">\n<h3>NumberFormat<a class=\"headerlink\" href=\"#numberformat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-NumberFormat\">\n<code class=\"descname\">NumberFormat</code><a class=\"headerlink\" href=\"#component-NumberFormat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 Number to be formatted</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Number format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#component-NumberFormat\">&lt;NumberFormat&gt;</a> component is a wrapper around\n<cite>Intl.NumberFormat_. It takes a number as a ``value`</cite> prop\nand formats it using <code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code> options. <code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code> prop supports the same\noptions as <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a>:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">num</span> <span class=\"o\">=</span> <span class=\"mf\">0.42</span><span class=\"p\">;</span>\n<span class=\"c1\">// default language format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">NumberFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">num</span><span class=\"p\">}</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">amount</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span><span class=\"p\">;</span>\n<span class=\"c1\">// custom format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">NumberFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">amount</span><span class=\"p\">}</span> <span class=\"na\">format</span><span class=\"o\">=</span><span class=\"p\">{{</span>\n    <span class=\"nx\">style</span><span class=\"o\">:</span> <span class=\"s1\">&#39;currency&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">currency</span><span class=\"o\">:</span> <span class=\"s1\">&#39;EUR&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">minimumFractionDigits</span><span class=\"o\">:</span> <span class=\"mi\">2</span>\n<span class=\"p\">}}</span> <span class=\"p\">/&gt;;</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"providers\">\n<h2>Providers<a class=\"headerlink\" href=\"#providers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Message catalogs and the active language are passed to the context in\n<a class=\"reference internal\" href=\"#component-I18nProvider\">&lt;I18nProvider&gt;</a>. However, context should never be accessed\ndirectly. The <a class=\"reference internal\" href=\"#withI18n\" title=\"withI18n\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">withI18n()</span></code></a> high-order component passes <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> prop\ndown to wrapped component and shadows all implementation details.</p>\n<div class=\"section\" id=\"i18nprovider\">\n<h3>I18nProvider<a class=\"headerlink\" href=\"#i18nprovider\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-I18nProvider\">\n<code class=\"descname\">I18nProvider</code><a class=\"headerlink\" href=\"#component-I18nProvider\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>language</strong> (<em>string</em>) \u2013 Active language</li>\n<li><strong>locales</strong> (<em>string|string[]</em>) \u2013 List of locales used for date/number formatting. Defaults to active language.</li>\n<li><strong>catalogs</strong> (<em>object</em>) \u2013 Message catalogs</li>\n<li><strong>defaultRender</strong> (<em>React.Element|React.Class|string</em>) \u2013 Default element to render translation</li>\n<li><strong>missing</strong> (<em>string|Function</em>) \u2013 Custom message to be returned when translation is missing</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">defaultRender</span></code> has the same meaning as <code class=\"docutils literal notranslate\"><span class=\"pre\">render</span></code> in other i18n\ncomponents. <a class=\"reference internal\" href=\"#rendering-translations\"><span class=\"std std-ref\">Rendering of translations</span></a> is explained\nat the beginning of this document.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">language</span></code> sets the active language and loads corresponding message catalog.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">locales</span></code> are used for date/number formatting for countries or regions which use\ndifferent formats for the same language (e.g. arabic numerals have several\nrepresentations).</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">missing</span></code> is used as a default translation when translation is missing. It might\nbe also a function, which is called with language and message ID. This is useful\nfor debugging:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;react&#39;</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18nProvider</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;@lingui/react&#39;</span><span class=\"p\">;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">App</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">language</span><span class=\"p\">}</span> <span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n     <span class=\"k\">return</span> <span class=\"p\">(</span>\n         <span class=\"p\">&lt;</span><span class=\"nt\">I18nProvider</span> <span class=\"na\">language</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">language</span><span class=\"p\">}</span> <span class=\"na\">missing</span><span class=\"o\">=</span><span class=\"s\">&quot;\ud83d\udea8&quot;</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">{</span><span class=\"cm\">/* This will render as \ud83d\udea8*/</span><span class=\"p\">}</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;missing translation&quot;</span> <span class=\"p\">/&gt;</span>\n         <span class=\"p\">&lt;/</span><span class=\"nt\">I18nProvider</span><span class=\"p\">&gt;</span>\n     <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code> is a type of <code class=\"docutils literal notranslate\"><span class=\"pre\">Catalogs</span></code>:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// One catalog per language</span>\n<span class=\"nx\">type</span> <span class=\"nx\">Catalogs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"p\">[</span><span class=\"nx\">language</span><span class=\"o\">:</span> <span class=\"nx\">string</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"nx\">Catalog</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Catalog contains messages and language data (i.e: plurals)</span>\n<span class=\"nx\">type</span> <span class=\"nx\">Catalog</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">messages</span><span class=\"o\">:</span> <span class=\"nx\">Messages</span><span class=\"p\">,</span>\n  <span class=\"nx\">languageData</span><span class=\"o\">?:</span> <span class=\"p\">{</span>\n    <span class=\"nx\">plurals</span><span class=\"o\">:</span> <span class=\"nb\">Function</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Message is either function (compiled message) or string</span>\n<span class=\"nx\">type</span> <span class=\"nx\">Messages</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"p\">[</span><span class=\"nx\">messageId</span><span class=\"o\">:</span> <span class=\"nx\">string</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"nx\">string</span> <span class=\"o\">|</span> <span class=\"nb\">Function</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>This component should live above all i18n components. A good place is as a\ntop-level application component. However, if the <code class=\"docutils literal notranslate\"><span class=\"pre\">language</span></code> is stored in a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">redux</span></code> store, this component should be inserted below <code class=\"docutils literal notranslate\"><span class=\"pre\">react-redux/Provider</span></code>:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;react&#39;</span><span class=\"p\">;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18nProvider</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s1\">&#39;@lingui/react&#39;</span><span class=\"p\">;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">App</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">language</span><span class=\"p\">}</span> <span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n     <span class=\"kr\">const</span> <span class=\"nx\">catalog</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"sb\">`locales/</span><span class=\"si\">${</span><span class=\"nx\">language</span><span class=\"si\">}</span><span class=\"sb\">.js`</span><span class=\"p\">);</span>\n\n     <span class=\"k\">return</span> <span class=\"p\">(</span>\n         <span class=\"p\">&lt;</span><span class=\"nt\">I18nProvider</span> <span class=\"na\">language</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">language</span><span class=\"p\">}</span> <span class=\"na\">catalogs</span><span class=\"o\">=</span><span class=\"p\">{{</span> <span class=\"p\">[</span><span class=\"nx\">language</span><span class=\"p\">]</span><span class=\"o\">:</span> <span class=\"nx\">catalog</span> <span class=\"p\">}}&gt;</span>\n            <span class=\"c1\">// rest of the app</span>\n         <span class=\"p\">&lt;/</span><span class=\"nt\">I18nProvider</span><span class=\"p\">&gt;</span>\n     <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"i18n\">\n<h3>I18n<a class=\"headerlink\" href=\"#i18n\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"component\">\n<dt id=\"component-I18n\">\n<code class=\"descname\">I18n</code><a class=\"headerlink\" href=\"#component-I18n\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>update</strong> (<em>bool</em>) \u2013 Subscribe to catalog and activate language updates</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#component-I18n\">&lt;I18n&gt;</a> injects <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object and <code class=\"docutils literal notranslate\"><span class=\"pre\">i18nHash</span></code> to child component, which\nmay be lambda component, regular component or React element. This pattern is\nknown as <a class=\"reference external\" href=\"https://reactjs.org/docs/render-props.html\">render prop component</a>.</p>\n<p>If want to use <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object in instance or lifecycle methods, consider using\n<a class=\"reference internal\" href=\"#withI18n\" title=\"withI18n\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">withI18n()</span></code></a> high-order component.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">i18nHash</span></code> is useful when rendering pure components or elements as it contains\nhash of active language and catalogs. Instead of comparing <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object it\u2019s\nenough to compare <code class=\"docutils literal notranslate\"><span class=\"pre\">i18nHash</span></code> to decide if component should update.</p>\n<p>Using lambda components:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">LogoutIcon</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">{({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">&lt;</span><span class=\"nt\">Icon</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;turn-off&quot;</span> <span class=\"na\">ariaLabel</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Log out`</span><span class=\"p\">)}</span> <span class=\"p\">/&gt;}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Using components and elements:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">TranslatedComponent</span><span class=\"p\">({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">&lt;</span><span class=\"nt\">Icon</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;turn-off&quot;</span> <span class=\"na\">ariaLabel</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Log out`</span><span class=\"p\">)}</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">RenderingElements</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">&lt;</span><span class=\"nt\">TranslatedComponent</span> <span class=\"p\">/&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"withi18n\">\n<h3>withI18n<a class=\"headerlink\" href=\"#withi18n\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"withI18n\">\n<code class=\"descname\">withI18n</code><span class=\"sig-paren\">(</span><em>options?</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#withI18n\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Arguments:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>options</strong> (<em>Object</em>) \u2013 Configuration for high-order component</li>\n<li><strong>update</strong> (<em>bool</em>) \u2013 Subscribe to catalog and activate language updates</li>\n<li><strong>withHash</strong> (<em>bool</em>) \u2013 Pass unique <code class=\"docutils literal notranslate\"><span class=\"pre\">i18nHash</span></code> prop to force underlying PureComponent re-render on catalog and active language update</li>\n<li><strong>withRef</strong> (<em>bool</em>) \u2013 Returns reference to wrapped instance in <code class=\"docutils literal notranslate\"><span class=\"pre\">getWrappedInstance</span></code></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#withI18n\" title=\"withI18n\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">withI18n()</span></code></a> is a higher-order component which injects <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object to\nwrapped component. <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object is needed when you have to access plain JS\nAPI for translation of JSX props:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nx\">React</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">withI18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">LogoutIcon</span> <span class=\"o\">=</span> <span class=\"nx\">withI18n</span><span class=\"p\">()(({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">Icon</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;turn-off&quot;</span> <span class=\"na\">ariaLabel</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Log out`</span><span class=\"p\">)}</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#withI18n\" title=\"withI18n\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">withI18n()</span></code></a> automatically hoists static properties from wrapped component.</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"helpers\">\n<h2>Helpers<a class=\"headerlink\" href=\"#helpers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"i18nmark\">\n<h3>i18nMark<a class=\"headerlink\" href=\"#i18nmark\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"function\">\n<dt id=\"i18nMark\">\n<code class=\"descname\">i18nMark</code><span class=\"sig-paren\">(</span><em>msgId: string</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#i18nMark\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Mark string as translated text, but don\u2019t translate it immediatelly.\nThis string is extracted to message catalog and can be used in\n<a class=\"reference internal\" href=\"#component-Trans\">&lt;Trans&gt;</a> component:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">message</span> <span class=\"o\">=</span> <span class=\"nx\">i18nMark</span><span class=\"p\">(</span><span class=\"s1\">&#39;Source text&#39;</span><span class=\"p\">);</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">message</span><span class=\"p\">}</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"c1\">// This is the same as:</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;Source text&quot;</span> <span class=\"p\">/&gt;;</span>\n</pre></div>\n</div>\n<p><a class=\"reference internal\" href=\"#i18nMark\" title=\"i18nMark\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">i18nMark()</span></code></a> is useful for definition of translations outside\ncomponents:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">languages</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">en</span><span class=\"o\">:</span> <span class=\"nx\">i18nMark</span><span class=\"p\">(</span><span class=\"s1\">&#39;English&#39;</span><span class=\"p\">),</span>\n  <span class=\"nx\">fr</span><span class=\"o\">:</span> <span class=\"nx\">i18nMark</span><span class=\"p\">(</span><span class=\"s1\">&#39;French&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">};</span>\n\n<span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">languages</span><span class=\"p\">).</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">language</span> <span class=\"p\">=&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">language</span><span class=\"p\">}</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">languages</span><span class=\"p\">[</span><span class=\"nx\">language</span><span class=\"p\">]}</span> <span class=\"p\">/&gt;</span>\n<span class=\"p\">);</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>In development, <a class=\"reference internal\" href=\"#i18nMark\" title=\"i18nMark\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">i18nMark()</span></code></a> is an identity function, returning <code class=\"docutils literal notranslate\"><span class=\"pre\">msgId</span></code>.</p>\n<p class=\"last\">In production, <a class=\"reference internal\" href=\"#i18nMark\" title=\"i18nMark\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">i18nMark()</span></code></a> call is replaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">msgId</span></code> string.</p>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["ref/macro", "&#64;lingui/macro - Reference", "N", "next"], ["ref/core", "&#64;lingui/core - The core i18n functionality", "P", "previous"]], "sourcename": "ref/react.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">API Reference - React (&#64;lingui/react)</a><ul>\n<li><a class=\"reference internal\" href=\"#general-concepts\">General Concepts</a><ul>\n<li><a class=\"reference internal\" href=\"#rendering-of-translations\">Rendering of Translations</a><ul>\n<li><a class=\"reference internal\" href=\"#global-configuration\">Global Configuration</a></li>\n<li><a class=\"reference internal\" href=\"#local-configuration\">Local Configuration</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#components\">Components</a><ul>\n<li><a class=\"reference internal\" href=\"#trans\">Trans</a></li>\n<li><a class=\"reference internal\" href=\"#plural\">Plural</a></li>\n<li><a class=\"reference internal\" href=\"#select\">Select</a></li>\n<li><a class=\"reference internal\" href=\"#selectordinal\">SelectOrdinal</a></li>\n<li><a class=\"reference internal\" href=\"#dateformat\">DateFormat</a></li>\n<li><a class=\"reference internal\" href=\"#numberformat\">NumberFormat</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#providers\">Providers</a><ul>\n<li><a class=\"reference internal\" href=\"#i18nprovider\">I18nProvider</a></li>\n<li><a class=\"reference internal\" href=\"#i18n\">I18n</a></li>\n<li><a class=\"reference internal\" href=\"#withi18n\">withI18n</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#helpers\">Helpers</a><ul>\n<li><a class=\"reference internal\" href=\"#i18nmark\">i18nMark</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ref/react", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.11", "display_github": true, "github_user": "lingui", "github_version": "master/", "github_repo": "js-lingui", "conf_py_path": "docs/"}