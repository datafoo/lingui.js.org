{"parents": [], "prev": {"link": "../react/", "title": "API Reference - React (&#64;lingui/react)"}, "next": {"link": "../cli/", "title": "API Reference - CLI (&#64;lingui/cli)"}, "title": "&#64;lingui/macro - Reference", "meta": {}, "body": "<div class=\"section\" id=\"lingui-macro-reference\">\n<h1>&#64;lingui/macro - Reference<a class=\"headerlink\" href=\"#lingui-macro-reference\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;lingui/macro</span></code> package provides <a class=\"reference external\" href=\"babel-plugin-macros\">babel macros</a> which\ntransforms template literals and JSX into messages in ICU MessageFormat.</p>\n<div class=\"section\" id=\"overview\">\n<h2>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>All macros are transformed to <a class=\"reference internal\" href=\"../react/#component-Trans\">&lt;Trans&gt;</a> component from\n<a class=\"reference internal\" href=\"../react/\"><span class=\"doc\">&#64;lingui/react</span></a>.</p>\n<p>Here are few examples of JS macros. These macros create a message descriptor with\na message in <a class=\"reference external\" href=\"message-format\">MessageFormat syntax</a>:</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"47%\" />\n<col width=\"53%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">JS Macro</th>\n<th class=\"head\">Result</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">t</span><span class=\"sb\">`Refresh inbox`</span>\n</pre></div>\n</div>\n</td>\n<td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cm\">/*i18n*/</span><span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s2\">&quot;Refresh inbox&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">t</span><span class=\"p\">(</span><span class=\"s2\">&quot;msg.refresh&quot;</span><span class=\"p\">)</span><span class=\"sb\">`Refresh inbox`</span>\n</pre></div>\n</div>\n</td>\n<td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cm\">/*i18n*/</span><span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s2\">&quot;msg.refresh&quot;</span><span class=\"p\">,</span>\n  <span class=\"nx\">defaults</span><span class=\"o\">:</span> <span class=\"s2\">&quot;Refresh inbox&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</td>\n</tr>\n<tr class=\"row-even\"><td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">t</span><span class=\"sb\">`Attachment </span><span class=\"si\">${</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"sb\"> saved`</span>\n</pre></div>\n</div>\n</td>\n<td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cm\">/*i18n*/</span><span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s2\">&quot;Attachment {name} saved&quot;</span><span class=\"p\">,</span>\n  <span class=\"nx\">values</span><span class=\"o\">:</span> <span class=\"p\">{</span> <span class=\"nx\">name</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</td>\n</tr>\n<tr class=\"row-odd\"><td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n  <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">count</span><span class=\"p\">,</span>\n  <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s2\">&quot;Message&quot;</span><span class=\"p\">,</span>\n  <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s2\">&quot;Messages&quot;</span>\n<span class=\"p\">})</span>\n</pre></div>\n</div>\n</td>\n<td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cm\">/*i18n*/</span><span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s2\">&quot;{count, plural, one {Message} other {Messages}}&quot;</span><span class=\"p\">,</span>\n  <span class=\"nx\">values</span><span class=\"o\">:</span> <span class=\"p\">{</span> <span class=\"nx\">count</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</td>\n</tr>\n<tr class=\"row-even\"><td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">t</span><span class=\"sb\">`Today is </span><span class=\"si\">${</span><span class=\"nx\">date</span><span class=\"p\">(</span><span class=\"nx\">today</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n</pre></div>\n</div>\n</td>\n<td><div class=\"first last highlight-js notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cm\">/*i18n*/</span><span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s2\">&quot;Today is {today, date}&quot;</span><span class=\"p\">,</span>\n  <span class=\"nx\">values</span><span class=\"o\">:</span> <span class=\"p\">{</span> <span class=\"nx\">today</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Following examples are the same messages above but written using JSX macros. As above,\nmacros create a message in <a class=\"reference external\" href=\"message-format\">MessageFormat syntax</a>, but this time\nthe result in <a class=\"reference internal\" href=\"../react/#component-Trans\">&lt;Trans&gt;</a> component:</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"47%\" />\n<col width=\"53%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">JSX Macro</th>\n<th class=\"head\">Result</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans&gt;Refresh</span> <span class=\"pre\">inbox&lt;/Trans&gt;</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans</span> <span class=\"pre\">id=&quot;Refresh</span> <span class=\"pre\">inbox&quot;</span> <span class=\"pre\">/&gt;</span></code></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans</span> <span class=\"pre\">id=&quot;msg.refresh&quot;&gt;Refresh</span> <span class=\"pre\">inbox&lt;/Trans&gt;</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans</span> <span class=\"pre\">id=&quot;msg.refresh&quot;</span> <span class=\"pre\">defaults=&quot;Refresh</span> <span class=\"pre\">inbox&quot;</span> <span class=\"pre\">/&gt;</span></code></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans&gt;Attachment</span> <span class=\"pre\">{name}</span> <span class=\"pre\">saved&lt;/Trans&gt;</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans</span> <span class=\"pre\">id=&quot;Attachment</span> <span class=\"pre\">{name}</span> <span class=\"pre\">saved&quot;</span> <span class=\"pre\">/&gt;</span></code></td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Plural</span> <span class=\"pre\">value={count}</span> <span class=\"pre\">one=&quot;Message&quot;</span> <span class=\"pre\">other=&quot;Messages&quot;</span> <span class=\"pre\">/&gt;</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans</span> <span class=\"pre\">id=&quot;{count,</span> <span class=\"pre\">plural,</span> <span class=\"pre\">one</span> <span class=\"pre\">{Message}</span> <span class=\"pre\">other</span> <span class=\"pre\">{Messages}}&quot;</span> <span class=\"pre\">/&gt;</span></code></td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans&gt;Today</span> <span class=\"pre\">is</span> <span class=\"pre\">&lt;DateFormat</span> <span class=\"pre\">value={today}</span> <span class=\"pre\">/&gt;&lt;/Trans&gt;</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;Trans</span> <span class=\"pre\">id=&quot;Today</span> <span class=\"pre\">is</span> <span class=\"pre\">{today,</span> <span class=\"pre\">date}&quot;</span> <span class=\"pre\">/&gt;</span></code></td>\n</tr>\n</tbody>\n</table>\n<p>Generated message is used as a message ID in catalog, but can be overriden by custom ID.\nGenerated message is guaranteed to be syntactically valid.</p>\n</div>\n<div class=\"section\" id=\"installation\">\n<h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Babel macros require <a class=\"reference external\" href=\"https://github.com/kentcdodds/babel-plugin-macros\">babel-plugin-macros</a> to work. If you use a framework\n(for example GatsbyJS, Create React App &gt;2.0) you might already have macros enabled.\nOtherwise install it as any other Babel plugin:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Install <code class=\"docutils literal notranslate\"><span class=\"pre\">babel-plugin-macros</span></code> as a development dependency:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">npm</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">save</span><span class=\"o\">-</span><span class=\"n\">dev</span> <span class=\"n\">babel</span><span class=\"o\">-</span><span class=\"n\">plugin</span><span class=\"o\">-</span><span class=\"n\">macros</span>\n<span class=\"c1\"># yarn add --dev babel-plugin-macros</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Add <code class=\"docutils literal notranslate\"><span class=\"pre\">macros</span></code> to the top of plugins section in your Babel config.</p>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;plugins&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">&quot;macros&quot;</span>\n   <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</li>\n</ol>\n<p>Once you project has macros enabled, install <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;lingui/macro</span></code> as a development\ndependency:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">npm</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">save</span><span class=\"o\">-</span><span class=\"n\">dev</span> <span class=\"nd\">@lingui</span><span class=\"o\">/</span><span class=\"n\">macro</span>\n<span class=\"c1\"># yarn add --dev @lingui/macro</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"usage\">\n<h2>Usage<a class=\"headerlink\" href=\"#usage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"js-macros\">\n<h3>JS macros<a class=\"headerlink\" href=\"#js-macros\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>These macros can be used in any context (e.g. outside JSX) and are intended to work\nin combination with <cite>i18n._</cite> method. All JS macros are transformed into a <em>Message Descriptor</em>\nwhich is an object with message ID, default message and other parameters. <cite>i18n._</cite>\naccepts message descriptors and performs translation and formatting:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">type</span> <span class=\"nx\">MessageDescriptor</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n   <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"nb\">String</span><span class=\"p\">,</span>\n   <span class=\"nx\">defaults</span><span class=\"o\">?:</span> <span class=\"nb\">String</span><span class=\"p\">,</span>\n   <span class=\"nx\">values</span><span class=\"o\">?:</span> <span class=\"nb\">Object</span><span class=\"p\">,</span>\n   <span class=\"nx\">formats</span><span class=\"o\">?:</span> <span class=\"nb\">Object</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">id</span></code> is message ID and the only required parameter. <code class=\"docutils literal notranslate\"><span class=\"pre\">id</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">defaults</span></code>\nare extracted to message catalog. Only <code class=\"docutils literal notranslate\"><span class=\"pre\">id</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">values</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">formats</span></code>\nare used at runtime, all other attributes are removed from production code\nfor size optimization.</p>\n<div class=\"section\" id=\"description\">\n<h4>Description<a class=\"headerlink\" href=\"#description\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>All JS macros can have a description. Description is added using <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> comment in\nfront of the macro:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cm\">/*i18n: Description*/</span><span class=\"nx\">t</span><span class=\"sb\">`Message`</span>\n\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"cm\">/*i18n: Description*/</span><span class=\"p\">{</span>\n  <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s1\">&#39;Message&#39;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Description is extracted to message catalog as a help text for translators.</p>\n</div>\n<div class=\"section\" id=\"t\">\n<h4>t<a class=\"headerlink\" href=\"#t\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsmacro\">\n<dt id=\"jsmacro-t\">\n<code class=\"descname\">t</code><a class=\"headerlink\" href=\"#jsmacro-t\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The most common macro for messages. It transforms tagged template literal into message\nin ICU MessageFormat. It\u2019s allowed to use other i18n macros as variables.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">setupI18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/core&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">i18n</span> <span class=\"o\">=</span> <span class=\"nx\">setupI18n</span><span class=\"p\">()</span>\n\n<span class=\"c1\">// Static Message</span>\n<span class=\"kr\">const</span> <span class=\"kr\">static</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Static Message`</span><span class=\"p\">)</span>\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"c1\">// const static = i18n._(/*i18n*/{</span>\n<span class=\"c1\">//   id: &#39;Static&#39;,</span>\n<span class=\"c1\">// })</span>\n\n<span class=\"c1\">// My name is {name}</span>\n<span class=\"kr\">const</span> <span class=\"nx\">vars</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`My name is </span><span class=\"si\">${</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// Macros can be nested, date is macro for date formatting</span>\n<span class=\"kr\">const</span> <span class=\"nx\">date</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Today is </span><span class=\"si\">${</span><span class=\"nx\">date</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Call macro with a custom message ID to override auto-generated one.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">(</span><span class=\"s1\">&#39;msg.id&#39;</span><span class=\"p\">)</span><span class=\"sb\">`My name is </span><span class=\"si\">${</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"sb\">`</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"plural\">\n<h4>plural<a class=\"headerlink\" href=\"#plural\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsmacro\">\n<dt id=\"jsmacro-plural\">\n<code class=\"descname\">plural</code><a class=\"headerlink\" href=\"#jsmacro-plural\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">plural</span></code> macro is used for pluralization, e.g: messages which has different form\nbased on counter. It accepts an object with required key <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> which determines\nthe plural form. The only required plural form is a catch-all <code class=\"docutils literal notranslate\"><span class=\"pre\">other</span></code>. Other forms\ndepends on source language you\u2019re using (e.g: English has <code class=\"docutils literal notranslate\"><span class=\"pre\">one</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">other</span></code> plural\nforms).</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">setupI18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/core&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">plural</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">i18n</span> <span class=\"o\">=</span> <span class=\"nx\">setupI18n</span><span class=\"p\">()</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n   <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">count</span><span class=\"p\">,</span>\n   <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# Book&quot;</span><span class=\"p\">,</span>\n   <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# Books&quot;</span>\n<span class=\"p\">}))</span>\n\n<span class=\"c1\">// t macro isn&#39;t required for nested messages,</span>\n<span class=\"c1\">// template strings are transformed automatically.</span>\n<span class=\"kr\">const</span> <span class=\"nx\">vars</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n   <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">count</span><span class=\"p\">,</span>\n   <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"sb\"> has # friend`</span><span class=\"p\">,</span>\n   <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"sb\"> has # friends`</span>\n<span class=\"p\">}))</span>\n\n<span class=\"c1\">// Example of pluralization using two counters</span>\n<span class=\"kr\">const</span> <span class=\"kr\">double</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">plural</span><span class=\"p\">({</span>\n   <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">numBooks</span><span class=\"p\">,</span>\n   <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"nx\">plural</span><span class=\"p\">({</span>\n      <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">numArticles</span><span class=\"p\">,</span>\n      <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"sb\">`1 book and 1 article`</span><span class=\"p\">,</span>\n      <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"sb\">`1 book and </span><span class=\"si\">${</span><span class=\"nx\">numArticles</span><span class=\"si\">}</span><span class=\"sb\"> articles`</span><span class=\"p\">,</span>\n   <span class=\"p\">}),</span>\n   <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"nx\">plural</span><span class=\"p\">({</span>\n      <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">numArticles</span><span class=\"p\">,</span>\n      <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">numBooks</span><span class=\"si\">}</span><span class=\"sb\"> books and 1 article`</span><span class=\"p\">,</span>\n      <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"sb\">`</span><span class=\"si\">${</span><span class=\"nx\">numBooks</span><span class=\"si\">}</span><span class=\"sb\"> books and </span><span class=\"si\">${</span><span class=\"nx\">numArticles</span><span class=\"si\">}</span><span class=\"sb\"> articles`</span><span class=\"p\">,</span>\n   <span class=\"p\">}),</span>\n<span class=\"p\">}))</span>\n</pre></div>\n</div>\n<p>Call macro with a string as a first argument to override auto-generated message ID.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// Override auto-generated message ID</span>\n<span class=\"kr\">const</span> <span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">plural</span><span class=\"p\">(</span><span class=\"s2\">&quot;msg.id&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n   <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">count</span><span class=\"p\">,</span>\n   <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# Book&quot;</span><span class=\"p\">,</span>\n   <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# Books&quot;</span>\n<span class=\"p\">}))</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"date\">\n<h4>date<a class=\"headerlink\" href=\"#date\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsmacro\">\n<dt id=\"jsmacro-date\">\n<code class=\"descname\">date</code><a class=\"headerlink\" href=\"#jsmacro-date\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>This macro marks variable as a date which is formatted using <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\">Intl.DateTimeFormat</a>.</p>\n<p>First parameter is a value to be formatted.</p>\n<p>Second argument (optional) specifies date format.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">setupI18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/core&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span><span class=\"p\">,</span> <span class=\"nx\">date</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">i18n</span> <span class=\"o\">=</span> <span class=\"nx\">setupI18n</span><span class=\"p\">()</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">today</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()</span>\n<span class=\"kr\">const</span> <span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Today is </span><span class=\"si\">${</span><span class=\"nx\">date</span><span class=\"p\">(</span><span class=\"nx\">today</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"sb\">.`</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"number\">\n<h4>number<a class=\"headerlink\" href=\"#number\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsmacro\">\n<dt id=\"jsmacro-number\">\n<code class=\"descname\">number</code><a class=\"headerlink\" href=\"#jsmacro-number\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>This macro marks variable as a number which is formatted using <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a>.</p>\n<p>First parameter is a value to be formatted.</p>\n<p>Second argument (optional) specifies number format.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">setupI18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/core&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span><span class=\"p\">,</span> <span class=\"nx\">number</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">i18n</span> <span class=\"o\">=</span> <span class=\"nx\">setupI18n</span><span class=\"p\">()</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">msg</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`There were </span><span class=\"si\">${</span><span class=\"nx\">number</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"sb\"> people.`</span><span class=\"p\">)</span>\n<span class=\"kr\">const</span> <span class=\"nx\">percent</span> <span class=\"o\">=</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Interest rate is </span><span class=\"si\">${</span><span class=\"nx\">number</span><span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"s2\">&quot;percent&quot;</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"sb\">.`</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"jsx-macros\">\n<h3>JSX Macros<a class=\"headerlink\" href=\"#jsx-macros\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"common-props\">\n<h4>Common props<a class=\"headerlink\" href=\"#common-props\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>All macros share following props:</p>\n<div class=\"section\" id=\"id\">\n<h5>id<a class=\"headerlink\" href=\"#id\" title=\"Permalink to this headline\">\u00b6</a></h5>\n<p>Each message in catalog is identified by <strong>message ID</strong>.</p>\n<p>While all macros use generated message as the ID, it\u2019s possible to override it.\nIn such case, generated message is used as a default translation.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Trans</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;message.attachment_saved&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">Attachment</span> <span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"p\">}</span> <span class=\"nx\">saved</span><span class=\"p\">.&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span>\n\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"c1\">// &lt;Trans id=&quot;message.attachment_saved&quot; defaults=&quot;Attachment {name} saved.&quot; /&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"id2\">\n<h5>description<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h5>\n<p>Description of the message which is extracted to message catalogs as a help text for\ntranslators. It\u2019s removed from production code.</p>\n</div>\n<div class=\"section\" id=\"render\">\n<h5>render<a class=\"headerlink\" href=\"#render\" title=\"Permalink to this headline\">\u00b6</a></h5>\n<p>Custom component to render translation into. This prop is directly passed to\n<a class=\"reference internal\" href=\"../react/#component-Trans\">&lt;Trans&gt;</a> component from <a class=\"reference internal\" href=\"../react/\"><span class=\"doc\">&#64;lingui/react</span></a>. See\n<a class=\"reference external\" href=\"rendering-translations\">rendering of translations</a> for more info.</p>\n</div>\n</div>\n<div class=\"section\" id=\"trans\">\n<h4>Trans<a class=\"headerlink\" href=\"#trans\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsxmacro\">\n<dt id=\"jsxmacro-Trans\">\n<code class=\"descname\">Trans</code><a class=\"headerlink\" href=\"#jsxmacro-Trans\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>id</strong> (<em>string</em>) \u2013 Custom message ID</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#jsxmacro-Trans\">&lt;Trans&gt;</a> is the basic macro for static messages, messages with variables,\nbut also for messages with inline markup.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Trans</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">Refresh</span> <span class=\"nx\">inbox</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"c1\">// &lt;Trans id=&quot;Refresh inbox&quot; /&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;message.attachment_saved&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">Attachment</span> <span class=\"p\">{</span><span class=\"nx\">name</span><span class=\"p\">}</span> <span class=\"nx\">saved</span><span class=\"p\">.&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span>\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"c1\">// &lt;Trans id=&quot;message.attachment_saved&quot; defaults=&quot;Attachment {name} saved.&quot; /&gt;</span>\n</pre></div>\n</div>\n<p>This macro is especially useful when message contains inline markup.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Trans</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">Read</span> <span class=\"nx\">the</span> <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;/docs&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">docs</span><span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;.&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;;</span>\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"c1\">// &lt;Trans id=&quot;Read the &lt;0&gt;docs&lt;/0&gt;.&quot; components={[&lt;a href=&quot;/docs&quot; /&gt;]} /&gt;</span>\n</pre></div>\n</div>\n<p>Components and HTML tags are replaced with dummy indexed tags (<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;0&gt;&lt;/0&gt;</span></code>) which\nhas several advatanges:</p>\n<ul class=\"simple\">\n<li>both custom React components and built-in HTML tags are supported</li>\n<li>change of component props doesn\u2019t break the translation</li>\n<li>the message is extracted as a whole sentence (this seems to be obvious, but most\ni18n libs simply split message into pieces by tags and translate them separately)</li>\n</ul>\n</div>\n<div class=\"section\" id=\"id3\">\n<h4>Plural<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsxmacro\">\n<dt id=\"jsxmacro-Plural\">\n<code class=\"descname\">Plural</code><a class=\"headerlink\" href=\"#jsxmacro-Plural\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 (required) Value is mapped to plural form below</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Number format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a></li>\n<li><strong>offset</strong> (<em>number</em>) \u2013 Offset of value when calculating plural forms</li>\n<li><strong>zero</strong> (<em>string</em>) \u2013 Form for empty <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code></li>\n<li><strong>one</strong> (<em>string</em>) \u2013 <em>Singular</em> form</li>\n<li><strong>two</strong> (<em>string</em>) \u2013 <em>Dual</em> form</li>\n<li><strong>few</strong> (<em>string</em>) \u2013 <em>Paucal</em> form</li>\n<li><strong>many</strong> (<em>string</em>) \u2013 <em>Plural</em> form</li>\n<li><strong>other</strong> (<em>string</em>) \u2013 (required) general <em>plural</em> form</li>\n<li><strong>_&lt;number&gt;</strong> (<em>string</em>) \u2013 Exact match form, corresponds to <code class=\"docutils literal notranslate\"><span class=\"pre\">=N</span></code> rule</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>MessageFormat: <code class=\"docutils literal notranslate\"><span class=\"pre\">{arg,</span> <span class=\"pre\">plural,</span> <span class=\"pre\">...forms}</span></code></p>\n</dd></dl>\n\n<p>Props of <a class=\"reference internal\" href=\"#jsxmacro-Plural\">&lt;Plural&gt;</a> macro are transformed into <a class=\"reference internal\" href=\"../message-format/#std:icu-plural\"><code class=\"xref std std-icu docutils literal notranslate\"><span class=\"pre\">plural</span></code></a> format.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Plural</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">Plural</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">numBooks</span><span class=\"p\">}</span> <span class=\"na\">one</span><span class=\"o\">=</span><span class=\"s\">&quot;Book&quot;</span> <span class=\"na\">other</span><span class=\"o\">=</span><span class=\"s\">&quot;Books&quot;</span> <span class=\"p\">/&gt;</span>\n<span class=\"c1\">// \u2193 \u2193 \u2193 \u2193 \u2193 \u2193</span>\n<span class=\"c1\">// &lt;Trans id=&quot;{numBooks, plural, one {Book} other {Books}}&quot; values={{ numBooks }} /&gt;</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">#</span></code> are formatted using <a class=\"reference internal\" href=\"../message-format/#std:icu-number\"><code class=\"xref std std-icu docutils literal notranslate\"><span class=\"pre\">number</span></code></a> format. <code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code> prop is passed to this\nformatter.</p>\n<p>Exact matches in MessageFormat syntax are expressed as <code class=\"docutils literal notranslate\"><span class=\"pre\">=int</span></code> (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">=0</span></code>),\nbut in React this isn\u2019t a valid prop name. Therefore, exact matches are expressed as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_int</span></code> prop (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">_0</span></code>). This is commonly used in combination with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> prop. <code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> affects only plural forms, not exact matches.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span>import { Plural } from &quot;@lingui/macro&quot;\n\nconst count = 42\n\n&lt;Plural\n    value={count}\n    offset={1}\n    // when value == 0\n    _0=&quot;Nobody arrived&quot;\n\n    // when value == 1\n    _1=&quot;Only you arrived&quot;\n\n    // when value == 2\n    // value - offset = 1 -&gt; `one` plural form\n    one=&quot;You and # other guest arrived&quot;\n\n    // when value &gt;= 3\n    other=&quot;You and # other guests arrived&quot;\n/&gt;\n\n// This is transformed to Trans component with ID:\n// {count, plural, _0    {Nobody arrived}\n//                 _1    {Only you arrived}\n//                 one   {You and # other guest arrived}\n//                 other {You and # other guests arrived}}\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"select\">\n<h4>Select<a class=\"headerlink\" href=\"#select\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsxmacro\">\n<dt id=\"jsxmacro-Select\">\n<code class=\"descname\">Select</code><a class=\"headerlink\" href=\"#jsxmacro-Select\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 (required) Value determines which form is outputted</li>\n<li><strong>other</strong> (<em>number</em>) \u2013 (required) Default, catch-all form</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>MessageFormat: <code class=\"docutils literal notranslate\"><span class=\"pre\">{arg,</span> <span class=\"pre\">select,</span> <span class=\"pre\">...forms}</span></code></p>\n</dd></dl>\n\n<p>Props of <a class=\"reference internal\" href=\"#jsxmacro-Select\">&lt;Select&gt;</a> macro are transformed into <a class=\"reference internal\" href=\"../message-format/#std:icu-select\"><code class=\"xref std std-icu docutils literal notranslate\"><span class=\"pre\">select</span></code></a> format:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Select</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"c1\">// gender == &quot;female&quot;      -&gt; Her book</span>\n<span class=\"c1\">// gender == &quot;male&quot;        -&gt; His book</span>\n<span class=\"c1\">// gender == &quot;unspecified&quot; -&gt; Their book</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">Select</span>\n    <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">gender</span><span class=\"p\">}</span>\n    <span class=\"na\">male</span><span class=\"o\">=</span><span class=\"s\">&quot;His book&quot;</span>\n    <span class=\"na\">female</span><span class=\"o\">=</span><span class=\"s\">&quot;Her book&quot;</span>\n    <span class=\"na\">other</span><span class=\"o\">=</span><span class=\"s\">&quot;Their book&quot;</span>\n<span class=\"p\">/&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"selectordinal\">\n<h4>SelectOrdinal<a class=\"headerlink\" href=\"#selectordinal\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsxmacro\">\n<dt id=\"jsxmacro-SelectOrdinal\">\n<code class=\"descname\">SelectOrdinal</code><a class=\"headerlink\" href=\"#jsxmacro-SelectOrdinal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 (required) Value is mapped to plural form below</li>\n<li><strong>offset</strong> (<em>number</em>) \u2013 Offset of value for plural forms</li>\n<li><strong>zero</strong> (<em>string</em>) \u2013 Form for empty <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code></li>\n<li><strong>one</strong> (<em>string</em>) \u2013 <em>Singular</em> form</li>\n<li><strong>two</strong> (<em>string</em>) \u2013 <em>Dual</em> form</li>\n<li><strong>few</strong> (<em>string</em>) \u2013 <em>Paucal</em> form</li>\n<li><strong>many</strong> (<em>string</em>) \u2013 <em>Plural</em> form</li>\n<li><strong>other</strong> (<em>string</em>) \u2013 (required) general <em>plural</em> form</li>\n<li><strong>_&lt;number&gt;</strong> (<em>string</em>) \u2013 Exact match form, correspond to <code class=\"docutils literal notranslate\"><span class=\"pre\">=N</span></code> rule. (e.g: <code class=\"docutils literal notranslate\"><span class=\"pre\">_0</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">_1</span></code>)</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Number format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>MessageFormat: <code class=\"docutils literal notranslate\"><span class=\"pre\">{arg,</span> <span class=\"pre\">selectordinal,</span> <span class=\"pre\">...forms}</span></code></p>\n</dd></dl>\n\n<p>Props of <a class=\"reference internal\" href=\"#jsxmacro-SelectOrdinal\">&lt;SelectOrdinal&gt;</a> macro are transformed into <code class=\"xref std std-icu docutils literal notranslate\"><span class=\"pre\">selectOrdinal</span></code>\nformat:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">SelectOrdinal</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"c1\">// count == 1 -&gt; 1st</span>\n<span class=\"c1\">// count == 2 -&gt; 2nd</span>\n<span class=\"c1\">// count == 3 -&gt; 3rd</span>\n<span class=\"c1\">// count == 4 -&gt; 4th</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">SelectOrdinal</span>\n    <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">count</span><span class=\"p\">}</span>\n    <span class=\"na\">one</span><span class=\"o\">=</span><span class=\"s\">&quot;1st&quot;</span>\n    <span class=\"na\">two</span><span class=\"o\">=</span><span class=\"s\">&quot;2nd&quot;</span>\n    <span class=\"na\">few</span><span class=\"o\">=</span><span class=\"s\">&quot;3rd&quot;</span>\n    <span class=\"na\">other</span><span class=\"o\">=</span><span class=\"s\">&quot;#th&quot;</span>\n<span class=\"p\">/&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"dateformat\">\n<h4>DateFormat<a class=\"headerlink\" href=\"#dateformat\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsxmacro\">\n<dt id=\"jsxmacro-DateFormat\">\n<code class=\"descname\">DateFormat</code><a class=\"headerlink\" href=\"#jsxmacro-DateFormat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>string|Date</em>) \u2013 (required) date to be formatted</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 date format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\">Intl.DateTimeFormat</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#jsxmacro-DateFormat\">&lt;DateFormat&gt;</a> macro is transformed into <a class=\"reference internal\" href=\"../message-format/#std:icu-date\"><code class=\"xref std std-icu docutils literal notranslate\"><span class=\"pre\">date</span></code></a> format.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// date as a string</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">DateFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;2018-07-23&quot;</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">now</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">();</span>\n<span class=\"c1\">// default language format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">DateFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">now</span><span class=\"p\">}</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">now</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">();</span>\n<span class=\"c1\">// custom format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">DateFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">now</span><span class=\"p\">}</span> <span class=\"na\">format</span><span class=\"o\">=</span><span class=\"p\">{{</span>\n    <span class=\"nx\">year</span><span class=\"o\">:</span> <span class=\"s2\">&quot;numeric&quot;</span><span class=\"p\">,</span>\n    <span class=\"nx\">month</span><span class=\"o\">:</span> <span class=\"s2\">&quot;long&quot;</span><span class=\"p\">,</span>\n    <span class=\"nx\">day</span><span class=\"o\">:</span> <span class=\"s2\">&quot;numeric&quot;</span>\n<span class=\"p\">}}</span> <span class=\"p\">/&gt;;</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Standalone <a class=\"reference internal\" href=\"#jsxmacro-DateFormat\">&lt;DateFormat&gt;</a> is transformed to <a class=\"reference internal\" href=\"../react/#component-DateFormat\">&lt;DateFormat&gt;</a>\nwhich is evaluated directly. It\u2019s never transformed to <code class=\"docutils literal notranslate\"><span class=\"pre\">{value,</span> <span class=\"pre\">date}</span></code> message,\nbecause such message can\u2019t be translated.</p>\n</div>\n</div>\n<div class=\"section\" id=\"numberformat\">\n<h4>NumberFormat<a class=\"headerlink\" href=\"#numberformat\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"jsxmacro\">\n<dt id=\"jsxmacro-NumberFormat\">\n<code class=\"descname\">NumberFormat</code><a class=\"headerlink\" href=\"#jsxmacro-NumberFormat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Props:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>value</strong> (<em>number</em>) \u2013 (required) Number to be formatted</li>\n<li><strong>format</strong> (<em>string|Object</em>) \u2013 Number format passed as options to <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\">Intl.NumberFormat</a></li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<p><a class=\"reference internal\" href=\"#jsxmacro-NumberFormat\">&lt;NumberFormat&gt;</a> macro is transformed into <a class=\"reference internal\" href=\"../message-format/#std:icu-number\"><code class=\"xref std std-icu docutils literal notranslate\"><span class=\"pre\">number</span></code></a> format.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">num</span> <span class=\"o\">=</span> <span class=\"mf\">0.42</span><span class=\"p\">;</span>\n<span class=\"c1\">// default language format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">NumberFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">num</span><span class=\"p\">}</span> <span class=\"p\">/&gt;;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">amount</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span><span class=\"p\">;</span>\n<span class=\"c1\">// custom format</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">NumberFormat</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">amount</span><span class=\"p\">}</span> <span class=\"na\">format</span><span class=\"o\">=</span><span class=\"p\">{{</span>\n    <span class=\"nx\">style</span><span class=\"o\">:</span> <span class=\"s1\">&#39;currency&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">currency</span><span class=\"o\">:</span> <span class=\"s1\">&#39;EUR&#39;</span><span class=\"p\">,</span>\n    <span class=\"nx\">minimumFractionDigits</span><span class=\"o\">:</span> <span class=\"mi\">2</span>\n<span class=\"p\">}}</span> <span class=\"p\">/&gt;;</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["ref/cli", "API Reference - CLI (&#64;lingui/cli)", "N", "next"], ["ref/react", "API Reference - React (&#64;lingui/react)", "P", "previous"]], "sourcename": "ref/macro.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">&#64;lingui/macro - Reference</a><ul>\n<li><a class=\"reference internal\" href=\"#overview\">Overview</a></li>\n<li><a class=\"reference internal\" href=\"#installation\">Installation</a></li>\n<li><a class=\"reference internal\" href=\"#usage\">Usage</a><ul>\n<li><a class=\"reference internal\" href=\"#js-macros\">JS macros</a><ul>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#t\">t</a></li>\n<li><a class=\"reference internal\" href=\"#plural\">plural</a></li>\n<li><a class=\"reference internal\" href=\"#date\">date</a></li>\n<li><a class=\"reference internal\" href=\"#number\">number</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#jsx-macros\">JSX Macros</a><ul>\n<li><a class=\"reference internal\" href=\"#common-props\">Common props</a><ul>\n<li><a class=\"reference internal\" href=\"#id\">id</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">description</a></li>\n<li><a class=\"reference internal\" href=\"#render\">render</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#trans\">Trans</a></li>\n<li><a class=\"reference internal\" href=\"#id3\">Plural</a></li>\n<li><a class=\"reference internal\" href=\"#select\">Select</a></li>\n<li><a class=\"reference internal\" href=\"#selectordinal\">SelectOrdinal</a></li>\n<li><a class=\"reference internal\" href=\"#dateformat\">DateFormat</a></li>\n<li><a class=\"reference internal\" href=\"#numberformat\">NumberFormat</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "ref/macro", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.11", "display_github": true, "github_user": "lingui", "github_version": "master/", "github_repo": "js-lingui", "conf_py_path": "docs/"}