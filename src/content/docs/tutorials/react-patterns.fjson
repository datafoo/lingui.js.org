{"parents": [], "prev": {"link": "../react/", "title": "Tutorial - Internationalization of React apps"}, "next": {"link": "../react-native/", "title": "Tutorial - Internationalization of React Native apps"}, "title": "Common i18n patterns in React", "meta": {}, "body": "<div class=\"section\" id=\"common-i18n-patterns-in-react\">\n<h1>Common i18n patterns in React<a class=\"headerlink\" href=\"#common-i18n-patterns-in-react\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Following page describes the most common i18n patterns in React. It\u2019s a followup\nto <a class=\"reference external\" href=\"react\">tutorial</a> with practical examples. See the\n<a class=\"reference external\" href=\"../ref/react\">API reference</a> for detailed information about all components.</p>\n<div class=\"section\" id=\"macros\">\n<h2>Macros<a class=\"headerlink\" href=\"#macros\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Using jsx macros is the most straightforward way how to translate your React\ncomponents.</p>\n<p><a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a> handles translations of messages including variables and other\nReact components:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Trans</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">LinguiJS</span> <span class=\"nx\">example</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;</span><span class=\"nx\">Hello</span> <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;/profile&quot;</span><span class=\"p\">&gt;{</span><span class=\"nx\">name</span><span class=\"p\">}&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;.&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n<p>You don\u2019t need anything special to use <a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a> inside out app (except\nof wrapping your app in <a class=\"reference internal\" href=\"../../ref/react/#component-I18nProvider\">&lt;I18nProvider&gt;</a>).</p>\n<div class=\"section\" id=\"using-generated-message-as-id\">\n<h3>Using generated message as ID<a class=\"headerlink\" href=\"#using-generated-message-as-id\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>In the examples above, the content of <a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a> is transformed into\nmessage in MessageFormat syntax. By default, this message is used as a message ID.\nIn the example above, messages <code class=\"docutils literal notranslate\"><span class=\"pre\">LinguiJS</span> <span class=\"pre\">example</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Hello</span> <span class=\"pre\">&lt;0&gt;{name}&lt;/0&gt;.</span></code>\nare extracted.</p>\n</div>\n<div class=\"section\" id=\"using-custom-id\">\n<h3>Using custom ID<a class=\"headerlink\" href=\"#using-custom-id\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you\u2019re using custom IDs in your project, add <code class=\"docutils literal notranslate\"><span class=\"pre\">id</span></code> prop to i18n components:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Trans</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;msg.header&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">LinguiJS</span> <span class=\"nx\">example</span><span class=\"p\">&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;msg.hello&quot;</span><span class=\"p\">&gt;</span><span class=\"nx\">Hello</span> <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;/profile&quot;</span><span class=\"p\">&gt;{</span><span class=\"nx\">name</span><span class=\"p\">}&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;.&lt;/</span><span class=\"nt\">Trans</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n<p>Messages <code class=\"docutils literal notranslate\"><span class=\"pre\">msg.header</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">msg.hello</span></code> will be extracted with default values\n<code class=\"docutils literal notranslate\"><span class=\"pre\">LinguiJS</span> <span class=\"pre\">example</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Hello</span> <span class=\"pre\">&lt;0&gt;{name}&lt;/0&gt;.</span></code>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"element-attributes-and-string-only-translations\">\n<h2>Element attributes and string only translations<a class=\"headerlink\" href=\"#element-attributes-and-string-only-translations\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Sometimes you can\u2019t use <a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a> component, for example when translating element\nattributes:</p>\n<div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;...&quot;</span> <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"s\">&quot;Image caption&quot;</span> <span class=\"p\">/&gt;</span>\n</pre></div>\n</div>\n<p>In such case you need to use <a class=\"reference internal\" href=\"../../ref/react/#component-I18n\">&lt;I18n&gt;</a> render prop component to access <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code>\nobject and <a class=\"reference internal\" href=\"../../ref/macro/#jsmacro-t\">t</a> macro to wrap message:</p>\n<ol class=\"arabic simple\">\n<li>Use render prop component <a class=\"reference internal\" href=\"../../ref/react/#component-I18n\">&lt;I18n&gt;</a> from <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;lingui/react</span></code>, to access\n<code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object.</li>\n<li>Call <code class=\"xref js js-meth docutils literal notranslate\"><span class=\"pre\">i18n._`()</span></code> to translate message wrapped in JS macros. <a class=\"reference internal\" href=\"../../ref/macro/#jsmacro-t\">t</a> is\nequivalent for <a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a>, <a class=\"reference internal\" href=\"../../ref/macro/#jsmacro-plural\">plural</a> is equivalent to <a class=\"reference internal\" href=\"../../ref/react/#component-Plural\">&lt;Plural&gt;</a>.</li>\n</ol>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">ImageWithCaption</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">{({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;...&quot;</span> <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Image caption`</span><span class=\"p\">)}</span> <span class=\"p\">/&gt;</span>\n         <span class=\"p\">)}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"id1\">\n<h3>Using generated message as ID<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You can either use generated messages as IDs or custom ones. This is the same\nas working for i18n components.</p>\n<p>In this example:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">ImageWithCaption</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">{({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;...&quot;</span> <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`Image caption`</span><span class=\"p\">)}</span> <span class=\"p\">/&gt;</span>\n         <span class=\"p\">)}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Message <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span> <span class=\"pre\">caption</span></code> will be extracted.</p>\n</div>\n<div class=\"section\" id=\"id2\">\n<h3>Using custom ID<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you\u2019re using custom IDs in your project, call <a class=\"reference internal\" href=\"../../ref/macro/#jsmacro-t\">t</a> with ID as a first\nargument and then use string templates as usual:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">ImageWithCaption</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">{({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;...&quot;</span> <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"p\">(</span><span class=\"s1\">&#39;msg.caption&#39;</span><span class=\"p\">)</span><span class=\"sb\">`Image caption`</span><span class=\"p\">)}</span> <span class=\"p\">/&gt;</span>\n         <span class=\"p\">)}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Message <code class=\"docutils literal notranslate\"><span class=\"pre\">msg.caption</span></code> will be extracted with default value <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span> <span class=\"pre\">caption</span></code>.</p>\n<p>For all other js macros (<a class=\"reference internal\" href=\"../../ref/macro/#jsmacro-plural\">plural</a>, select`, selectOrdinal`),\npass ID as object key:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">plural</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">ImageWithCaption</span><span class=\"p\">({</span> <span class=\"nx\">count</span> <span class=\"p\">})</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">{({</span> <span class=\"nx\">i18n</span> <span class=\"p\">})</span> <span class=\"p\">=&gt;</span> <span class=\"p\">(</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;...&quot;</span> <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">plural</span><span class=\"p\">(</span><span class=\"s1\">&#39;msg.caption&#39;</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n               <span class=\"nx\">value</span><span class=\"o\">:</span> <span class=\"nx\">count</span><span class=\"p\">,</span>\n               <span class=\"nx\">one</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# image caption&quot;</span><span class=\"p\">,</span>\n               <span class=\"nx\">other</span><span class=\"o\">:</span> <span class=\"s2\">&quot;# image captions&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">}))}</span> <span class=\"p\">/&gt;</span>\n         <span class=\"p\">)}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18n</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"translations-outside-react-components\">\n<h2>Translations outside React components<a class=\"headerlink\" href=\"#translations-outside-react-components\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Another common pattern is when you need to access translations (<code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object)\noutside React components, for example inside <code class=\"docutils literal notranslate\"><span class=\"pre\">redux-saga</span></code>. In such case, you need\na bit more setup:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">Create your own instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> using <a class=\"reference internal\" href=\"../../ref/core/#setupI18n\" title=\"setupI18n\"><code class=\"xref js js-func docutils literal notranslate\"><span class=\"pre\">setupI18n()</span></code></a> form <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;lingui/core</span></code></p>\n</li>\n<li><p class=\"first\">Pass this instance as <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> prop to <a class=\"reference internal\" href=\"../../ref/react/#component-I18nProvider\">&lt;I18nProvider&gt;</a>. This will replace\ndefault <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object initialized inside <a class=\"reference internal\" href=\"../../ref/react/#component-I18nProvider\">&lt;I18nProvider&gt;</a>.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\">// App.js</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">setupI18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/core&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">I18nProvider</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/react&quot;</span>\n\n<span class=\"kr\">export</span> <span class=\"kr\">const</span> <span class=\"nx\">i18n</span> <span class=\"o\">=</span> <span class=\"nx\">setupI18n</span><span class=\"p\">()</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">App</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">I18nProvider</span> <span class=\"na\">i18n</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">i18n</span><span class=\"p\">}&gt;</span>\n         <span class=\"p\">{</span><span class=\"cm\">/* Out app */</span><span class=\"p\">}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">I18nProvider</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Whenever you are outside React context (i.e. you can\u2019t access props), you can use this\n<code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> object.</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">i18n</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;./App.js&quot;</span>\n<span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">alert</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"c1\">// use i18n as you were inside React component</span>\n   <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">t</span><span class=\"sb\">`...`</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"lazy-translations\">\n<h2>Lazy translations<a class=\"headerlink\" href=\"#lazy-translations\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a> can also translate messages from variables. We can use <a class=\"reference internal\" href=\"../../ref/macro/#jsmacro-t\">t</a>\nmacro to create a message descriptor and then pass it to <a class=\"reference internal\" href=\"../../ref/macro/#jsxmacro-Trans\">&lt;Trans&gt;</a> macro as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">id</span></code> prop:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span><span class=\"p\">,</span> <span class=\"nx\">Trans</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">languages</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"nx\">t</span><span class=\"sb\">`English`</span>\n   <span class=\"nx\">t</span><span class=\"sb\">`Czech`</span>\n<span class=\"p\">]</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">LanguageSwitcher</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n         <span class=\"p\">{</span><span class=\"nx\">languages</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">lang</span> <span class=\"p\">=&gt;</span> <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">Trans</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">lang</span><span class=\"p\">}/&gt;&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;}</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\n   <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>This pattern also work with string-only translations. Just pass the message descriptor\nto <a class=\"reference internal\" href=\"../../ref/core/#I18n._\" title=\"I18n._\"><code class=\"xref js js-meth docutils literal notranslate\"><span class=\"pre\">I18n._()</span></code></a> method as usual:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">import</span> <span class=\"p\">{</span> <span class=\"nx\">t</span> <span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">&quot;@lingui/macro&quot;</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">languages</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"nx\">t</span><span class=\"sb\">`English`</span>\n   <span class=\"nx\">t</span><span class=\"sb\">`Czech`</span>\n<span class=\"p\">]</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">translatedLanguages</span> <span class=\"o\">=</span> <span class=\"nx\">languages</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span>\n   <span class=\"nx\">lang</span> <span class=\"p\">=&gt;</span> <span class=\"nx\">i18n</span><span class=\"p\">.</span><span class=\"nx\">_</span><span class=\"p\">(</span><span class=\"nx\">lang</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["tutorials/react-native", "Tutorial - Internationalization of React Native apps", "N", "next"], ["tutorials/react", "Tutorial - Internationalization of React apps", "P", "previous"]], "sourcename": "tutorials/react-patterns.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Common i18n patterns in React</a><ul>\n<li><a class=\"reference internal\" href=\"#macros\">Macros</a><ul>\n<li><a class=\"reference internal\" href=\"#using-generated-message-as-id\">Using generated message as ID</a></li>\n<li><a class=\"reference internal\" href=\"#using-custom-id\">Using custom ID</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#element-attributes-and-string-only-translations\">Element attributes and string only translations</a><ul>\n<li><a class=\"reference internal\" href=\"#id1\">Using generated message as ID</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Using custom ID</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#translations-outside-react-components\">Translations outside React components</a></li>\n<li><a class=\"reference internal\" href=\"#lazy-translations\">Lazy translations</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "tutorials/react-patterns", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.11", "display_github": true, "github_user": "lingui", "github_version": "master/", "github_repo": "js-lingui", "conf_py_path": "docs/"}