{"parents": [{"link": "../toc/", "title": "RFCs and design decisions"}], "prev": {"link": "../001_macros_message_descriptors/", "title": "001 - Macros for message descriptors"}, "next": null, "title": "002 - Catalogs", "meta": {}, "body": "<div class=\"section\" id=\"catalogs\">\n<h1>002 - Catalogs<a class=\"headerlink\" href=\"#catalogs\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Related issue: <a class=\"reference external\" href=\"https://github.com/lingui/js-lingui/issues/257\">#257</a></p>\n<p>Message catalogs can quickly grow in size and it\u2019s convenient to split them\ninto several files. Also, not all messages are extracted from source files and it may\nbe convenient to fetch message descriptors from API (e.g. GraphQL Enum)</p>\n<div class=\"admonition important\">\n<p class=\"first admonition-title\">Important</p>\n<p class=\"last\">This proposal is about splitting <strong>source catalogs</strong>. Compiled\nmessage catalogs always contain all messages in project for now.</p>\n</div>\n<div class=\"section\" id=\"proposal\">\n<h2>Proposal<a class=\"headerlink\" href=\"#proposal\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Deprecate <a class=\"reference internal\" href=\"../../ref/conf/#std:config-localeDir\"><code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">localeDir</span></code></a>, <a class=\"reference internal\" href=\"../../ref/conf/#std:config-srcPathDirs\"><code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">srcPathDirs</span></code></a> and <a class=\"reference internal\" href=\"../../ref/conf/#std:config-srcPathIgnorePatterns\"><code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">srcPathIgnorePatterns</span></code></a>.\nThese will be replaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code>, described below.</p>\n<p>Deprecate <a class=\"reference internal\" href=\"../../ref/cli/#lingui-cli-add-locale\"><code class=\"xref std std-cli docutils literal notranslate\"><span class=\"pre\">add-locale</span></code></a> command and replace it with <code class=\"docutils literal notranslate\"><span class=\"pre\">locales</span></code> configuration.</p>\n<p>Allow override default <code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">rootDir</span></code>. All relative paths inside <code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code>\nconfiguration will be relative to <code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">rootDir</span></code>.</p>\n<div class=\"section\" id=\"how-catalogs-work\">\n<h3>How <code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code> work<a class=\"headerlink\" href=\"#how-catalogs-work\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Instead of single <a class=\"reference internal\" href=\"../../ref/conf/#std:config-localeDir\"><code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">localeDir</span></code></a> directory, <code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code> accepts an object with\nconfiguration for each catalog:</p>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./locale/{locale}/shared&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;.&quot;</span><span class=\"p\">,</span>\n         <span class=\"nt\">&quot;./locale/{locale}/graphql&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;run!scripts/fetch_graphql_enums.js&quot;</span><span class=\"p\">,</span>\n         <span class=\"nt\">&quot;./components/{name}/locale/{locale}&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;./components/{name}/&quot;</span><span class=\"p\">,</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p><strong>Key</strong> is a path to catalog or catalogs. It\u2019s either absolute or relative path\nto <code class=\"xref std std-conf docutils literal notranslate\"><span class=\"pre\">rootDir</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">{locale}</span></code> placeholder is replaced with catalog\u2019s locale.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">{name}</span></code> placeholder is replaced with a catalog name. Source path must include <code class=\"docutils literal notranslate\"><span class=\"pre\">{name}</span></code>\npattern as well and it works as a <code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code> glob pattern:</p>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./components/{name}/locale/{locale}&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;./components/{name}/&quot;</span><span class=\"p\">,</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p><strong>Value</strong> specify a source from which messages are extracted. It can be also an array\nof sources. The most common one is a directory, which is traversed recursively and\nmessages are collected from source files.</p>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./locale/{locale}/all&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;./src/&quot;</span><span class=\"p\">,</span>\n         <span class=\"nt\">&quot;./locale/{locale}/shared&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;./src/shared/&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;./vendor/&quot;</span><span class=\"p\">,</span>\n         <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>If the path starts with <code class=\"docutils literal notranslate\"><span class=\"pre\">!</span></code> then it\u2019s excluded:</p>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./locale/{locale}/messages&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;.&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;!./node_modules/&quot;</span><span class=\"p\">,</span>\n         <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>If the path starts with <code class=\"docutils literal notranslate\"><span class=\"pre\">run!</span></code> then messages are loaded from executable script.\nSee <em>loading messages from</em> scripts below.</p>\n<div class=\"admonition important\">\n<p class=\"first admonition-title\">Important</p>\n<p class=\"last\">Catalog names are always <strong>without extension</strong> because that depends on serializer,\ne.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">json</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">po</span></code>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"loading-messages-from-scripts\">\n<h3>Loading messages from scripts<a class=\"headerlink\" href=\"#loading-messages-from-scripts\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Messages can also be loaded dynamically from a script. If the source path starts with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">run!</span></code> (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">run!scripts/fetch_graphql_enums.js</span></code>), the script is executed and\nreturned messages are added to catalog.</p>\n<p>The type of returned messages should be following:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span>type MessageDescriptor = {\n  id: string,\n  defaults?: string,\n  description?: string\n}\n\ntype Messages = Array&lt;MessageDescriptor&gt; | Promise&lt;Array&lt;MessageDescriptor&gt;&gt;\n\ntype ExtractedDescriptors =\n  | {\n      name: string,\n      messages: Messages\n    }\n  | Messages\n\nexport default {\n  name: &quot;graphql&quot;,\n  messages: [\n    {\n      id: &quot;Episode.NEWHOPE&quot;,\n      defaults: &quot;New Hope&quot;\n    },\n    {\n      id: &quot;Episode.EMPIRE&quot;,\n      defaults: &quot;Empire Strikes Back&quot;\n    },\n    {\n      id: &quot;Episode.JEDI&quot;,\n      defaults: &quot;Return of the Jedi&quot;\n    }\n  ]\n}\n</pre></div>\n</div>\n<p>If returned value is an object with <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> attribute then value of this attribute\nis used in <code class=\"docutils literal notranslate\"><span class=\"pre\">{name}</span></code> placeholder.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">Messages</span></code> might also be a promise:</p>\n<div class=\"highlight-jsx notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"p\">{</span>\n   <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;graphql&#39;</span><span class=\"p\">,</span>\n   <span class=\"nx\">messages</span><span class=\"o\">:</span> <span class=\"nx\">fetch_enums</span><span class=\"p\">(</span><span class=\"s1\">&#39;/graphql&#39;</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"message-files-and-translation-files\">\n<h3>Message files and translation files<a class=\"headerlink\" href=\"#message-files-and-translation-files\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Until now, babel plugin extracted messages into <code class=\"docutils literal notranslate\"><span class=\"pre\">_build</span></code> directory. Files from\nthis directory were merged into single catalog which was used to create locale files.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">_build</span></code> directory will be removed right after messages are extracted and collected\nmessages (without translations) will be stored in message file (<code class=\"docutils literal notranslate\"><span class=\"pre\">POT</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">JSON</span></code>\nextension). This file is language agnostic and contains only message definitions.</p>\n<p>In next step, message file is used to create locale specific catalog by merging\ntranslation from previous locale files.</p>\n<p>This allows to check if message source have changed, access message definitions\nin other tools and optionally, create/edit message files manually (if automatic\nextracting isn\u2019t possible).</p>\n</div>\n</div>\n<div class=\"section\" id=\"summary\">\n<h2>Summary<a class=\"headerlink\" href=\"#summary\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Default <code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code> settings is:</p>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;&lt;rootDir&gt;/locale/{locale}/messages&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;&lt;rootDir&gt;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;!&lt;rootDir&gt;/node_modules/&quot;</span><span class=\"p\">,</span>\n         <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"example-configurations\">\n<h3>Example configurations<a class=\"headerlink\" href=\"#example-configurations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"separate-catalogs-per-component-placed-inside-component-dir\">\n<h4>Separate catalogs per component, placed inside component dir<a class=\"headerlink\" href=\"#separate-catalogs-per-component-placed-inside-component-dir\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<div class=\"highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>.\n\u251c\u2500\u2500 ComponentA/\n\u2502   \u251c\u2500\u2500 locale/\n\u2502   \u2502  \u251c\u2500\u2500 en.po\n\u2502   \u2502  \u2514\u2500\u2500 cs.po\n\u2502   \u251c\u2500\u2500 ComponentA.test.js\n\u2502   \u2514\u2500\u2500 ComponentA.js\n\u2514\u2500\u2500 ComponentB/\n    \u251c\u2500\u2500 locale/\n    \u2502  \u251c\u2500\u2500 en.po\n    \u2502  \u2514\u2500\u2500 cs.po\n    \u251c\u2500\u2500 ComponentB.test.js\n    \u2514\u2500\u2500 ComponentB.js\n</pre></div>\n</div>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./{name}/locale/{locale}&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;./{name}/&quot;</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"separate-catalogs-per-component-placed-inside-shared-directory\">\n<h4>Separate catalogs per component, placed inside shared directory<a class=\"headerlink\" href=\"#separate-catalogs-per-component-placed-inside-shared-directory\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<div class=\"highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>.\n\u251c\u2500\u2500 locale/\n\u2502   \u251c\u2500\u2500 en/\n\u2502   \u2502   \u251c\u2500\u2500 ComponentA.po\n\u2502   \u2502   \u2514\u2500\u2500 ComponentB.po\n\u2502   \u2514\u2500\u2500 cs/\n\u2502       \u251c\u2500\u2500 ComponentA.po\n\u2502       \u2514\u2500\u2500 ComponentB.po\n\u251c\u2500\u2500 ComponentA/\n\u2502   \u251c\u2500\u2500 ComponentA.test.js\n\u2502   \u2514\u2500\u2500 ComponentA.js\n\u2514\u2500\u2500 ComponentB/\n    \u251c\u2500\u2500 ComponentB.test.js\n    \u2514\u2500\u2500 ComponentB.js\n</pre></div>\n</div>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./locale/{locale}/{name}&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;./{name}/&quot;</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"loading-message-descriptors-from-api-e-g-graphql-enums\">\n<h4>Loading message descriptors from API (e.g. GraphQL enums)<a class=\"headerlink\" href=\"#loading-message-descriptors-from-api-e-g-graphql-enums\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<div class=\"highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>.\n\u2514\u2500\u2500 locale/\n   \u251c\u2500\u2500 en/\n   \u2502   \u251c\u2500\u2500 graphql.po  // messages from remote GraphQL server\n   \u2502   \u2514\u2500\u2500 app.po      // messages from local JS files\n   \u2514\u2500\u2500 cs/\n       \u251c\u2500\u2500 graphql.po\n       \u2514\u2500\u2500 app.po\n</pre></div>\n</div>\n<div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;lingui&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;catalogs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n         <span class=\"nt\">&quot;./locale/{locale}/graphql&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;run!./scripts/fetch_graphql_enums.js&quot;</span><span class=\"p\">,</span>\n         <span class=\"nt\">&quot;./locale/{locale}/app&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;.&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;!./node_modules/&quot;</span>\n         <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"possible-challenges\">\n<h3>Possible challenges<a class=\"headerlink\" href=\"#possible-challenges\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>User should be warned if messages are collected, but there\u2019s no corresponding\n<code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory for them (e.g. the root <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory is missing).</li>\n<li>When a new <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory is created in subdirectory, all translations\nfrom parent <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> should be moved here.</li>\n<li>The other way around, when directory is removed, there should be a way how to merge\ntranlations to parent directory.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"other-considered-options\">\n<h3>Other considered options<a class=\"headerlink\" href=\"#other-considered-options\" title=\"Permalink to this headline\">\u00b6</a></h3>\n</div>\n<div class=\"section\" id=\"default-automatic-splitting\">\n<h3>Default - automatic splitting<a class=\"headerlink\" href=\"#default-automatic-splitting\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Create a <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory manually in a directory from which all messages should be\ncollected:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>.\n\u251c\u2500\u2500 locale/\n\u251c\u2500\u2500 componentA/\n\u2514\u2500\u2500 componentB/\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory contains messages from <code class=\"docutils literal notranslate\"><span class=\"pre\">componentA</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">componentB</span></code>.</p>\n<p>However, it doesn\u2019t not contain messages which are collected to <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory\nin a subdirectory:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>.\n\u251c\u2500\u2500 locale/\n\u251c\u2500\u2500 componentA/\n\u251c\u2500\u2500 componentB/\n\u2514\u2500\u2500 largeComponentC/\n    \u251c\u2500\u2500 locale/\n    \u251c\u2500\u2500 subcomponentA/\n    \u2514\u2500\u2500 subcomponentB/\n</pre></div>\n</div>\n<p>Here, <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> contains messages from <code class=\"docutils literal notranslate\"><span class=\"pre\">componentA</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">componentB</span></code>, but not\nfrom <code class=\"docutils literal notranslate\"><span class=\"pre\">largeComponentC</span></code>, because these messages are collected in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">largeComponentC/locale</span></code>.</p>\n</div>\n<div class=\"section\" id=\"advantages\">\n<h3>Advantages<a class=\"headerlink\" href=\"#advantages\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>It\u2019s flexible and doesn\u2019t require additional config in <code class=\"docutils literal notranslate\"><span class=\"pre\">.linguirc</span></code></p>\n</div>\n<div class=\"section\" id=\"disadvantages\">\n<h3>Disadvantages<a class=\"headerlink\" href=\"#disadvantages\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Directories must be created manually. In monorepos this might be extra work,\nbut for example in Lerna it\u2019s just <code class=\"docutils literal notranslate\"><span class=\"pre\">lerna</span> <span class=\"pre\">exec</span> <span class=\"pre\">--</span> <span class=\"pre\">mkdir</span> <span class=\"pre\">locales</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory is always placed near the source files. It\u2019s not possible to\nmove it to different location (other than creating symlinks)</li>\n<li>It\u2019s not possible to rename catalogs.</li>\n<li>It\u2019s not possible to collect messages from multiple independent sources into single\nlocale directory.</li>\n</ul>\n<div class=\"section\" id=\"create-multiple-lingui-configs\">\n<h4>Create multiple lingui configs<a class=\"headerlink\" href=\"#create-multiple-lingui-configs\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Create Lingui config in a directory, which should hold separate <code class=\"docutils literal notranslate\"><span class=\"pre\">locale</span></code> directory:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>.\n\u251c\u2500\u2500 .linguirc\n\u251c\u2500\u2500 locale/\n\u251c\u2500\u2500 componentA/\n\u251c\u2500\u2500 componentB/\n\u2514\u2500\u2500 largeComponentC/\n    \u251c\u2500\u2500 .linguirc\n    \u251c\u2500\u2500 locale/\n    \u251c\u2500\u2500 subcomponentA/\n    \u2514\u2500\u2500 subcomponentB/\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">.linguirc</span></code> is as simple as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"s2\">&quot;localeDir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;./locale&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>This seems to be very repetitive. On the other hand it allows overriding Lingui config\nper directory.</p>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["rfc/001_macros_message_descriptors", "001 - Macros for message descriptors", "P", "previous"]], "sourcename": "rfc/002_catalogs.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">002 - Catalogs</a><ul>\n<li><a class=\"reference internal\" href=\"#proposal\">Proposal</a><ul>\n<li><a class=\"reference internal\" href=\"#how-catalogs-work\">How <code class=\"docutils literal notranslate\"><span class=\"pre\">catalogs</span></code> work</a></li>\n<li><a class=\"reference internal\" href=\"#loading-messages-from-scripts\">Loading messages from scripts</a></li>\n<li><a class=\"reference internal\" href=\"#message-files-and-translation-files\">Message files and translation files</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#summary\">Summary</a><ul>\n<li><a class=\"reference internal\" href=\"#example-configurations\">Example configurations</a><ul>\n<li><a class=\"reference internal\" href=\"#separate-catalogs-per-component-placed-inside-component-dir\">Separate catalogs per component, placed inside component dir</a></li>\n<li><a class=\"reference internal\" href=\"#separate-catalogs-per-component-placed-inside-shared-directory\">Separate catalogs per component, placed inside shared directory</a></li>\n<li><a class=\"reference internal\" href=\"#loading-message-descriptors-from-api-e-g-graphql-enums\">Loading message descriptors from API (e.g. GraphQL enums)</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#possible-challenges\">Possible challenges</a></li>\n<li><a class=\"reference internal\" href=\"#other-considered-options\">Other considered options</a></li>\n<li><a class=\"reference internal\" href=\"#default-automatic-splitting\">Default - automatic splitting</a></li>\n<li><a class=\"reference internal\" href=\"#advantages\">Advantages</a></li>\n<li><a class=\"reference internal\" href=\"#disadvantages\">Disadvantages</a><ul>\n<li><a class=\"reference internal\" href=\"#create-multiple-lingui-configs\">Create multiple lingui configs</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "rfc/002_catalogs", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.11", "display_github": true, "github_user": "lingui", "github_version": "master/", "github_repo": "js-lingui", "conf_py_path": "docs/"}